---
apiVersion: v1
kind: ConfigMap
metadata:
  name: efs-provisioner-mysql
data:
  file.system.id: fs-94eab33d
  aws.region: us-west-2
  provisioner.name: example.com/aws-efs-mysql
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: efs-provisioner-mysql-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-efs-provisioner-mysql
subjects:
  - kind: ServiceAccount
    name: efs-provisioner-mysql
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: efs-provisioner-mysql
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: efs-provisioner-mysql
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: efs-provisioner-mysql
    spec:
      serviceAccount: efs-provisioner-mysql
      containers:
        - name: efs-provisioner-mysql
          image: quay.io/external_storage/efs-provisioner:latest
          env:
            - name: FILE_SYSTEM_ID
              valueFrom:
                configMapKeyRef:
                  name: efs-provisioner-mysql
                  key: file.system.id
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: efs-provisioner-mysql
                  key: aws.region
            - name: PROVISIONER_NAME
              valueFrom:
                configMapKeyRef:
                  name: efs-provisioner-mysql
                  key: provisioner.name
            - name: AWS_ACCESS_KEY_ID
              value: <AWS_KEY_ID>
            - name: AWS_SECRET_ACCESS_KEY
              value: <AWS_ACCESS_KEY>
          volumeMounts:
            - name: pv-volume
              mountPath: /persistentvolumes
      volumes:
        - name: pv-volume
          nfs:
            server: fs-94eab33d.efs.us-west-2.amazonaws.com
            path: /
---
kind: StorageClass
apiVersion: storage.k8s.io/v1beta1
metadata:
  name: aws-efs-mysql
provisioner: example.com/aws-efs-mysql
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: efs-mysql
  annotations:
    volume.beta.kubernetes.io/storage-class: "aws-efs-mysql"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
